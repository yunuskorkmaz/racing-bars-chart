{"version":3,"sources":["components/RaceBar.js","components/RaceGraph.js","App.js","index.js"],"names":["RaceBar","item","maxValue","rowIndex","dimensions","style","top","barHeight","className","backgroundColor","color","width","value","maxWidth","name","RaceGraph","padding","data","useState","items","setItems","max","setMax","containerWidth","setContainerWidth","useEffect","sort","a","b","Math","map","height","length","index","slice","findIndex","id","key","defaultProps","App","setData","timer","setTimer","updateRate","setUpdateRate","dataJson","randomValue","start","end","floor","random","updateData","reset","play","setInterval","pause","clearInterval","margin","onClick","type","required","onChange","e","target","gap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAuBeA,EArBC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAaC,EAAiB,8CAChE,OACC,wBACCC,MAAO,CACNC,IAAI,GAAD,OAAK,EAAIH,GAAYC,EAAWG,UAAY,GAA5C,QAGJ,yBACCC,UAAU,WACVH,MAAO,CACNI,gBAAiBR,EAAKS,MACtBC,MAAQV,EAAKW,MAAQV,GAAaE,EAAWS,SAAW,OAGzD,8BAAOZ,EAAKa,OAEb,8BAAOb,EAAKW,SCbTG,G,MAAY,SAAC,GAA+C,EAA7CC,QAA8C,IAArCT,EAAoC,EAApCA,UAAWI,EAAyB,EAAzBA,MAAOM,EAAkB,EAAlBA,KAAMZ,EAAY,EAAZA,MAAY,EACvCa,mBAAS,IAD8B,mBAC1DC,EAD0D,KACnDC,EADmD,OAE3CF,mBAAS,GAFkC,mBAE1DG,EAF0D,KAErDC,EAFqD,OAGrBJ,mBAAS,GAHY,mBAG1DK,EAH0D,KAG1CC,EAH0C,KAejE,OAXAC,qBAAU,WACTL,EAASH,EAAKS,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEhB,MAAQe,EAAEf,UACzCY,EAAkBb,KAChB,IAEHc,qBAAU,WACTL,EAASH,GACTK,EAAOO,KAAKR,IAAL,MAAAQ,KAAI,YAAQZ,EAAKa,KAAI,SAAC7B,GAAD,OAAUA,EAAKW,YAC3CY,EAAkBb,KAChB,CAACM,EAAMN,IAGT,yBACCH,UAAU,uBACVH,MAAK,eAAOA,EAAP,CAAc0B,OAAQ,OAAQpB,MAAOY,KAE1C,wBACClB,MAAO,CACNM,MAAOY,EACPQ,OAAQZ,EAAMa,QAAUzB,EAAY,KAGpCY,EAAMW,KAAI,SAAC7B,EAAMgC,GACjB,IAAI9B,EAAWgB,EACbe,QACAR,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEhB,MAAQe,EAAEf,SAC3BuB,WAAU,SAACR,GAAD,OAAOA,EAAES,KAAOnC,EAAKmC,MACjC,OACC,kBAAC,EAAD,CACCC,IAAKJ,EACLhC,KAAMA,EACNE,SAAUA,EACVD,SAAUmB,EACVR,SAAUF,EACVJ,UAAWA,WAQlBQ,EAAUuB,aAAe,CACxB3B,MAAO,IACPJ,UAAW,IAEGQ,Q,OCyBAwB,MA7Ef,WAAgB,IAAD,EACUrB,mBAAS,IADnB,mBACPD,EADO,KACDuB,EADC,OAEYtB,mBAAS,MAFrB,mBAEPuB,EAFO,KAEAC,EAFA,OAGsBxB,mBAAS,KAH/B,mBAGPyB,EAHO,KAGKC,EAHL,KAIdnB,qBAAU,WACTe,EAAQK,KACN,IAEH,IAAMC,EAAc,SAACC,EAAOC,GAC3B,OAAOnB,KAAKoB,MAAMpB,KAAKqB,UAAYF,EAAMD,EAAQ,IAAMA,GAGlDI,EAAa,WAAoB,IAAnBC,EAAkB,wDACjCjC,EAAQF,EAAKa,KAAI,SAAC7B,GACrB,OAAO,eACHA,EADJ,CAECW,MAAOwC,EACJN,EAAY,GAAI,KACf7C,EAAKW,OAASkC,EAAY,EAAG,SAGnCN,EAAQrB,IAGHkC,EAAO,WACZX,EAASY,YAAYH,EAAYR,KAG5BY,EAAQ,WACbC,cAAcf,IAWf,OACC,yBAAKpC,MAAO,CAAEoD,OAAQ,SACrB,6BACC,6BACC,4BAAQC,QAASL,GAAjB,QACA,4BAAQK,QAASH,GAAjB,SACA,4BAAQG,QAdE,WACbP,GAAW,KAaR,SAHD,cAKC,2BACC9C,MAAO,CAAEM,MAAO,QAChBC,MAAO+B,EACPgB,KAAK,SACLC,UAAQ,EACRC,SAjBoB,SAACC,GACzBlB,EAAckB,EAAEC,OAAOnD,UAMrB,KAaC,4BACC8C,QAAS,WACRH,IACAF,MAHF,QASD,kBAAC,EAAD,CACCpC,KAAMA,EACNN,MAAO,IACPJ,UAAW,GACXyD,IAAK,EACL3D,MAAO,CAAEI,gBAAiB,OAAQO,QAAS,eCpEhDiD,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,U","file":"static/js/main.db4e5979.chunk.js","sourcesContent":["import React from \"react\";\n\nconst RaceBar = ({ item, maxValue, rowIndex, ...dimensions }) => {\n\treturn (\n\t\t<li\n\t\t\tstyle={{\n\t\t\t\ttop: `${5 + rowIndex * (dimensions.barHeight + 5)}px`,\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"race-bar\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: item.color,\n\t\t\t\t\twidth: (item.value / maxValue) * (dimensions.maxWidth - 100),\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span>{item.name}</span>\n\t\t\t</div>\n\t\t\t<span>{item.value}</span>\n\t\t</li>\n\t);\n};\n\nexport default RaceBar;\n","import React, { useEffect, useState } from \"react\";\nimport RaceBar from \"./RaceBar\";\n\nimport \"../styles.css\";\n\nconst RaceGraph = ({ padding, barHeight, width, data, style }) => {\n\tconst [items, setItems] = useState([]);\n\tconst [max, setMax] = useState(0);\n\tconst [containerWidth, setContainerWidth] = useState(0);\n\tuseEffect(() => {\n\t\tsetItems(data.sort((a, b) => b.value - a.value));\n\t\tsetContainerWidth(width);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetItems(data);\n\t\tsetMax(Math.max(...data.map((item) => item.value)));\n\t\tsetContainerWidth(width);\n\t}, [data, width]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"race-graph-container\"\n\t\t\tstyle={{ ...style, height: \"auto\", width: containerWidth }}\n\t\t>\n\t\t\t<ul\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: containerWidth,\n\t\t\t\t\theight: items.length * (barHeight + 5),\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{items.map((item, index) => {\n\t\t\t\t\tvar rowIndex = items\n\t\t\t\t\t\t.slice()\n\t\t\t\t\t\t.sort((a, b) => b.value - a.value)\n\t\t\t\t\t\t.findIndex((a) => a.id === item.id);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<RaceBar\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\trowIndex={rowIndex}\n\t\t\t\t\t\t\tmaxValue={max}\n\t\t\t\t\t\t\tmaxWidth={width}\n\t\t\t\t\t\t\tbarHeight={barHeight}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\nRaceGraph.defaultProps = {\n\twidth: 800,\n\tbarHeight: 25,\n};\nexport default RaceGraph;\n","import React, { useEffect, useState } from \"react\";\nimport RaceGraph from \"./components/RaceGraph\";\nimport dataJson from \"./data.json\";\nfunction App() {\n\tconst [data, setData] = useState([]);\n\tconst [timer, setTimer] = useState(null);\n\tconst [updateRate, setUpdateRate] = useState(300);\n\tuseEffect(() => {\n\t\tsetData(dataJson);\n\t}, []);\n\n\tconst randomValue = (start, end) => {\n\t\treturn Math.floor(Math.random() * (end - start + 1)) + start;\n\t};\n\n\tconst updateData = (reset = false) => {\n\t\tvar items = data.map((item) => {\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tvalue: reset\n\t\t\t\t\t? randomValue(20, 100)\n\t\t\t\t\t: (item.value += randomValue(5, 20)),\n\t\t\t};\n\t\t});\n\t\tsetData(items);\n\t};\n\n\tconst play = () => {\n\t\tsetTimer(setInterval(updateData, updateRate));\n\t};\n\n\tconst pause = () => {\n\t\tclearInterval(timer);\n\t};\n\n\tconst reset = () => {\n\t\tupdateData(true);\n\t};\n\n\tconst handleUpdateRate = (e) => {\n\t\tsetUpdateRate(e.target.value);\n\t};\n\n\treturn (\n\t\t<div style={{ margin: \"20px\" }}>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={play}>Play</button>\n\t\t\t\t\t<button onClick={pause}>Pause</button>\n\t\t\t\t\t<button onClick={reset}>Reset</button>\n\t\t\t\t\tUpdate Rate\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{ width: \"60px\" }}\n\t\t\t\t\t\tvalue={updateRate}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={handleUpdateRate}\n\t\t\t\t\t/>\n\t\t\t\t\tms\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tpause();\n\t\t\t\t\t\t\tplay();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tSet\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<RaceGraph\n\t\t\t\t\tdata={data}\n\t\t\t\t\twidth={800}\n\t\t\t\t\tbarHeight={25}\n\t\t\t\t\tgap={5}\n\t\t\t\t\tstyle={{ backgroundColor: \"#eee\", padding: \"15px 0\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}